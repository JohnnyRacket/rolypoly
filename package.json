{
  "name": "rolypoly",
  "version": "1.0.0",
  "description": "A language agnostic way to store and vend rollback information for SoA or anything where rollbacks may be needed. Written in simple typescript, backed by redis, and opensource.",
  "main": "dist/index.js",
  "dependencies": {
    "@types/redis": "^2.8.17",
    "body-parser": "^1.19.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "express": "^4.17.3",
    "express-validator": "^6.3.0",
    "redis": "^3.0.2",
    "uuid": "^7.0.3"
  },
  "devDependencies": {
    "@types/body-parser": "^1.17.1",
    "@types/compression": "^1.0.1",
    "@types/cors": "^2.8.6",
    "@types/express": "^4.17.2",
    "@types/express-validator": "^3.0.0",
    "@types/node": "^12.12.17",
    "@types/uuid": "^7.0.2",
    "concurrently": "^5.0.1",
    "nodemon": "^2.0.2",
    "ts-node": "^8.5.4",
    "typescript": "^3.7.3"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "tsc",
    "serve": "node dist/server.js",
    "watch-ts": "tsc -w",
    "watch-node": "nodemon dist/server.js",
    "watch": "concurrently -k -p \"[{name}]\" -n \"TypeScript, Node\" -c \"yello.bold, cyan.bold\" \"yarn run watch-ts\" \"yarn run watch-node\""
  },
  "keywords": [
    "microservices",
    "SoA",
    "TypeScript",
    "Redis",
    "Rollback"
  ],
  "author": "John Harrison",
  "license": "MIT"
}
